<ui:composition template="#{ themeManager.listTemplatePath }" 
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:aplos="http://www.aplossystems.co.uk/aplosComponents"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:aploscc="http://java.sun.com/jsf/composite/components"
	xmlns:p="http://primefaces.org/ui">
	<ui:define name="listContent">
		<table class="aplos-form-table">
			<tr>
				<td class="aplos-label">Page visbility</td>
				<td class="aplos-field">
					<h:selectOneMenu value="#{ backingPage.dataTableState.lazyDataModel.selectedPageVisibility }" >
						<f:selectItems value="#{ backingPage.dataTableState.lazyDataModel.pageVisibilitySelectItems }"></f:selectItems>
						<p:ajax event="change" update=":listForm:tableWrapper" />
					</h:selectOneMenu>
				</td>
			</tr>
			<tr>
				<td class="aplos-label">Only Status 404</td>
				<td class="aplos-field">
					<h:selectBooleanCheckbox value="#{ backingPage.dataTableState.lazyDataModel.showingOnlyStatus404 }" >
						<p:ajax event="change" update=":listForm:tableWrapper" />
					</h:selectBooleanCheckbox>
				</td>
			</tr>
			<tr>
				<td class="aplos-label">Only created sessions</td>
				<td class="aplos-field">
					<h:selectBooleanCheckbox value="#{ backingPage.dataTableState.lazyDataModel.showingOnlySessionIdCreated }" >
						<p:ajax event="change" update=":listForm:tableWrapper" />
					</h:selectBooleanCheckbox>
				</td>
			</tr>
		</table>
		<aplos:panel id="tableWrapper">
			<aploscc:wrappedDataTable2 dataTableState="#{ backingPage.dataTableState }">
				<p:column sortBy="#{ tableBean.pageUrl }" filterBy="#{ tableBean.pageUrl }">
					<f:facet name="header">Url</f:facet>
					<h:outputText value="#{tableBean.pageUrlEnding}" title="#{ tableBean.pageUrl }" />
				</p:column>
				<p:column sortBy="#{ tableBean.refererUrl }" filterBy="#{ tableBean.refererUrl }">
					<f:facet name="header">Url</f:facet>
					<h:outputText value="#{tableBean.refererUrlEnding}" title="#{ tableBean.refererUrl }" />
				</p:column>
				<p:column sortBy="#{ tableBean.pageRequestedTime }" filterBy="#{ tableBean.pageRequestedTime }">
					<f:facet name="header">Requested</f:facet>
					<aplos:standardDateTableCell value="#{tableBean.pageRequestedDateTime}" />
				</p:column>
				<p:column sortBy="#{ tableBean.loggedInUser.firstName }" filterBy="#{ tableBean.loggedInUser.firstName }">
					<f:facet name="header">User</f:facet>
					<aploscc:quickView bean="#{tableBean.loggedInUser}" text="#{tableBean.loggedInUser.displayName}"/>
				</p:column>
				<p:column sortBy="#{ tableBean.sessionId }" filterBy="#{ tableBean.sessionId }" style="#{ backingPage.dataTableState.lazyDataModel.sessionIdStyle  }">
					<f:facet name="header">Session ID</f:facet>
					#{tableBean.sessionId}
				</p:column>
				<p:column sortBy="#{ tableBean.duration }" filterBy="#{ tableBean.duration }">
					<f:facet name="header">Duration</f:facet>
					<h:outputText value="#{tableBean.durationInMillis}" title="RV1 - #{tableBean.restoreViewBeforeBindTimeInMillis}, RV2 - #{tableBean.restoreViewAfterBindTimeInMillis}, ARV - #{tableBean.applyRequestValuesTimeInMillis}, PV - #{tableBean.processValidationsTimeInMillis}, UMV - #{tableBean.updateModelValuesTimeInMillis}, IA - #{tableBean.invokeApplicationTimeInMillis}, RR1 - #{tableBean.renderResponseBeforeBindTimeInMillis}, RR2 - #{tableBean.renderResponseAfterBindTimeInMillis}, RR3 - #{tableBean.renderResponseCompleteTimeInMillis}" />
				</p:column>
			</aploscc:wrappedDataTable2>
		</aplos:panel>
	</ui:define>
</ui:composition>